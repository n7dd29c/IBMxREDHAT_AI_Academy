'''
결측치 처리 방법
1. 삭제 - 행 또는 열
2. 임의의 값
            - 0 : fillna
            - 평균 : mean (이상치)
            - 중위 : median
            - 근접 : ffill (앞의 값), bfill (뒤의 값)
            - 특정 : 조건 보고 임의의 값 지정
            - 기타(guitar아님)등등...
3. interpolate - 보간 (알려진 데이터 점 집합의 범위 내에
                        새 데이터 점을 추가하는 기법)
4. 모델 - .predict (값을 예측해서 채움), (전혀 다른 모델 사용)
5. 부스팅 계열 모델 : 통상적으로 이상치, 결측치에 대해 영향을 덜 받음 (자유로움)
'''

import pandas as pd
import numpy as np

dates = [
    '16/7/2025', '17/7/2025', '18/7/2025',
    '19/7/2025', '20/7/2025', '21/7/2025',
]

dates = pd.to_datetime(dates)
print(dates)
# DatetimeIndex(['2025-07-16', '2025-07-17', '2025-07-18', '2025-07-19',
#                '2025-07-20', '2025-07-21'],
#               dtype='datetime64[ns]', freq=None)

print('====================================================================================')
ts = pd.Series([2, np.nan, np.nan, 8, 10, np.nan], index=dates)
print(ts)
# 2025-07-16     2.0
# 2025-07-17     NaN
# 2025-07-18     NaN
# 2025-07-19     8.0
# 2025-07-20    10.0
# 2025-07-21     NaN
# dtype: float64

print('====================================================================================')
ts = ts.interpolate()
print(ts)
# 2025-07-16     2.0
# 2025-07-17     4.0
# 2025-07-18     6.0
# 2025-07-19     8.0
# 2025-07-20    10.0
# 2025-07-21    10.0
# dtype: float64
# 중간값은 linear로 채워짐, 마지막은 ffill